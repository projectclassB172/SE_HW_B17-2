#1.编写函数，接收两个正整数作为参数，返回一个元组，其中第一个元素为最大公约数，第二个元素为最小公倍数。
def s_num(x,y):
    #进入if选择结构，判断两个正整数的大小，确保y作为被除数
    if x>y:
            x,y = y,x#序列解包，交换两个变量的值
    a = x*y
    #此处用到欧几里得算法——辗转相除法
    #以除数和余数反复做除法运算，当余数为0，取当前算式除数为最大公约数
    #最小公倍数为两个数的积a除以最大公约数
    while x!=0:
            b = y%x
            y = x
            x = b
    return(y,a//y)
x=int(input('----请输入第一个正整数----：'))
y=int(input('----请输入第二个正整数----：'))
c=s_num(x,y)
print(f'最大公约数和最小公倍数为:{c}')


结果为：
----请输入第一个正整数----：12
----请输入第二个正整数----：30
最大公约数和最小公倍数为:(6, 60)



# 2.编写函数，接受一个字符串作为参数，计算并打印传入字符串中数字，字母，空格，以及其它的个数。
def s_p(str):
    dig,al,tb,others = 0,0,0,0
    for i in str:
        #isdigit()方法判断字符串是否只由数字组成。
        if i.isdigit():
            dig += 1
        # isalpha() 方法检测字符串是否只由字母组成。
        elif i.isalpha():
            al += 1
        # isspace() 方法判断字符串是否只由空格组成。
        elif i.isspace():
            tb += 1
        else:
            others += 1
    print(f'其中数字有{dig}个，字母有{al}个，空格有{tb}个，其它的有{others}个')
str=input('----请输入一个字符串----：')
s_p(str)


结果为；
----请输入一个字符串----：32719  dahg76 qdq2
其中数字有8个，字母有7个，空格有3个，其它的有0个